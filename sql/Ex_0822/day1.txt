DB DataBase
- 구조화된 정보, 데이터의 조직화된 모음
- 컴퓨터에 전자적으로 저장되고, 데이터베이스 관리시스템에 의해 제어

DBMS DataBaseManagementSystem
- 데이터베이스와 사용자 또는 프로그램 간의 매개체 역학을 하여
사용자가 정보의 구성, 검색, 수정, 삭제와 같은 관리를 할수 있게 해준다

DBMS의 종류
1.계층 데이터베이스(HDBMS)
- 폴더와 파일 등의 계층 구조로 데이터를 저장하는 방식
- 데이터의 관계를 트리구조로 정의, 부모 자식의 형태를 가짐
- 하드디스크, DVD 파일 시스템 등
- 데이터의 액세스 속도가 빠름

2.네트워크형 데이터베이스(NDBMS)
- 데이터 구조를 네트워크상의 노드형태로 논리적으로 표현한 데이터 모델,
각각의 노드를 서로 대등한 관계로 구성한 시스템
- 계층형 데이터 베이스의 중복 문제 해결, 상하 종속적 관계 해결

3.관계형 데이터 베이스(RDBMS)
- 행, 열을 가지는 표 형식 데이터를 저장하는 데이터베이스
- SQL을 이용하여 관리 및 접근
- 다양한 용도로 사용 가능(범용성), 높은 성능
- 데이터 무결성 보장, 높은 신뢰성
- 데이터의 분류, 정렬, 탐색 속도가 빠름
- 대량의 데이터 입력 처리 가능

RDBMS의 종류
Oracle - 오라클에서 개발, 상업용으로는 유료
MySQL - 오픈소스 커뮤니티에서 개발
PostgreSQL - 오픈 소스 커뮤니티에서 개발
MS SQL - 마이크로소프트 개발
DB2 - IBM 개발
MariaDB

DBeaver IDE 설치하기
jdk가 설치되어 있지 않으면 작동 안함

데이터 베이스의 사용자 계정
데이터베이스의 생성 및 관리, 데이터의 삽입, 수정, 변경 및 삭제를 수행하는 데이터 베이스 계정을 의미한다

관리자 계정
- 데이터베이스의 생성과 관리를 담당하는 슈퍼유저 계정이며, 정의, 생성, 삭제 등의 작업이 가능하다
- 오라클 데이터베이스 생성시 관리자 계정인, sys, system 계정이 자동으로 생성된다
- 데이터 베이스에 대한 모든 권한과 생일은 가지는 계정

일반 계정
- 데이터 베이스에 대하여 명령 Query, 갱신, 보고서 작성 등의 작업을 수행 할 수 있는 계정
- 일반 계정은 업무에 필요한 최소한의 권한만 가지는 것을 원칙으로 한다

데이터베이스 접속하기
sqlplus

계정명/비밀번호 입력하고 로그인하기

계정 언락하기
alter user 계정명 account unlock;

계정 비밀번호 설정하기
alter user 계정명 identified by 새비밀번호;

OJDBC
데이터베이스와 통신을 담당하는 인터페이스
Oracle Java DataBase Connectivity의 약자
Oracle 전용의 jdbc 라이브러리이다
Oracle에서 제공하는 오라클DB를 관리할수 있도록 해주는 JDBC이다
MYSQL, MSSQL 등과 같은 DBMS에 맞는 JDBC 드라이버를 사용해야 한다
JDBC 드라이버의 구현체를 이용해서 특정 베넏의 데이터베이스에 접근할수 있다.

JDBC
- JDBC(Java DataBase Connectivity)는 Java 기반 어플리케이션 데이터를 데이터 베이스에 저장 및 업데이트 하거나
데이터베이스에 저장된 데이터를 Java에서 사용할 수 있도록 하는 자바 API
- Java로 만든 프로그램에서 데이터베이스에 접근하기 위해 JDBC API를 사용하여 데이터베이스에 연동할수 있으며,
데이터베이스에서 자료를 조회하거나 업데이트 하는 방법을 제공한다.
- JDBC API는 java.sql.* 패키지에 의해 구현

스키마
1. 데이터베이스의 구조와 제약 조건에 대한 전반적인 명세를 기술한 메타데이터의 집합
2. 스키마는 데이터베이스를 구성하는 데이터 개체 Entity, 속성 Attribute, 관계 Relationship 및 데이터 조작 시
데이터 값들이 갖는 제약 조건 등에 관해 전반적으로 정의
3. 스키마는 사용자 관점에 따라, 외부 스키마, 개념 스키마, 내부 스키마로 나뉨

스키마의 종류
1. 개념스키마 : 전체적인 뷰
 - 조직체 전체를 관장하는 입장에서 DB를 정의한것
 - 관계, 제약조건, 접근권한, 보안정책, 무결성 규칙에 관한 사항을 포함하고 있다
 - 개념 스키마를 '스키마'라고 칭하기도 하며, DB 전체를 기술한것이기 때문에 한개밖에 존재할수 없음

2. 내부스키마 : 물리적인 저장장치 입장에서 DB가 저장되는 방법을 기술한것
 - 스키마를 물리적으로 어떻게 디스크에 구현하기 위한 방법을 기술한 것
 - 데이터의 실제 저장 방법을 기술
 - 시스템 프로그래머나 설계자가 보는 관점의 스키마

3.외부스키마 : 사용자의 관점
 - 사용자나 응용 프로그래머가 개인의 입장에서 필요한 데이터베이스의 논리적 구조를 정의
 - 실세계에 존재하는 데이터들을 어떤 형식, 구조, 배치 화면을 통해 사용자에게 보여줄것인가
 - 전체 데이터베이스의 한 논리적 부분
 - 하나의 데이터베이스에는 여러개의 외부 스키마가 존재할수 있다
운전면허시험, 운전면허증, 운전면허필기시험, 운전면허기능
 - 개발자 입장에서는 c,java를 통해 db에 접근해서 데이터를 얻어온다.

SQL문 - 구조화된 질의 언어(Structured Query Language)의 약자로 DBMS상에서 데이터를 읽고 쓰고 삭제하는
데이터 관리를 위한 프로그램 언어
- C, Java 같은 일반 프로그래밍 언어는 절차적 언어라고 할수 있는데, SQL은 집합적 언어
- 집합적 언어는 데이터를 특정 집한단위로 분류해 이 단위별로 한번에 처리하는 언어
- RDBMS 표준언어로 SQL을 채택했고, 표준 SQL 문을 학습하면 오라클은 물론
MSSQL, MYSQL 등 여러 DBMS에서 동일하게 사용하룻 있음
- 물론 DBMS 별로 독특한 기능이 있긴 하지만, 다른 프로그래밍 언어에 비해 그 차이는 미미함
- SQL 문은 대소문자를 구별하지 않음
- 한 줄 또는 여러 줄에 걸쳐 입력하는 것이 가능
- SQL문장은 끝은 세미콜론 ;로 맺어야함

SQL문의 종류
1. DDL Data Definition Language 데이터 정의어
 - 데이터베이스 객체를 관리하는 언어
2. DML Data Manipulation Language 데이터 조작어
 - 데이터 삽입, 조회, 삭제, 갱신 등 실제로 데이터를 조작하는 언어
 - 개발자 입장에서 가장 많이 사용하는 SQL 문이다.
3. DCL Data Controll Language 데이터 제어어
 - 권한을 주거나 뺏는 키워드를 가지는 문장
4. TCL Transaction Controll Language 트랜잭션 제어어
 - 데이터를 데이터베이스에 적용, 되돌리거나 하는 키워드를 갖는 문장

DDL Data Definition Language 데이터 정의어 - 데이터베이스 객체를 생성, 삭제, 변경하는 언어
 1. CREATE : 테이블이나, 인덱스, 뷰 등 데이터베이스 객체를 생성한다.
 2. DROP : 생성된 데이터베이스 객체를 영구히 삭제
 3. ALTER : 이미 생성된 데이터베이스 객체를 수정
 4. TRUNCATE : 테이블의 데이터 통째로 삭제

SI 시스템 통합 -> 고객으로 부터 수주 받아서 만드는 0부터 쌓아올림 -> 고객사쪽으로 파견
SM 시스템 관리 -> 이미 만들어진 프로젝트를 유지보수

테이블
- 행과 열로 이루어진 데이터의 집합
- 엑셀의 모양과 굉장히 흡사
- 일반적인 데이터베이스에서는 행과 열만 있으면 테이블이라고 하지만,
관계형 데이터베이스에서는 특별한 제약을 추가하기 때문에 realation이라고도 부름

행 row
- 테이블을 구성하는 데이터 중 가로로 묶은 데이터 셋을 의미
- 일반적으로 한명에 대한 데이터를 가짐
- 관계형 데이터베이스에서는 튜플tuple 또는 레코드record라고 부름
- 행의 개수를 cardinality라고 함

열 column
- 테이블을 구성하는 데이터를 중 세로로 묶은 데이터 셋을 의미
- 일반적으로 그 테이블의 속성을 의미한다
- 열을 구성하는 값들은 도메인domain으로 되어있다
- 관계형 데이터베이스에서 속성atrribute라고 부른다
- 열의 수를 디그리degree라고 함

도메인 domain
- 하나의 속성이 취할수 있는 동일한 유형의 데이터 집합
- 예를들어 성별을 저장하기로 했으면 남, 여 두개만 들어올수 있다.

문자 데이터 타입
- 문자나 문자열 데이터는 문자형 데이터에 속하며, 오라클에서 제공하는 문자형 타입은 다음과 같다

자료형(데이터타입)
데이터 타입이란 컬럼이 저장되는 데이터의 유형을 말하며, 오라클에서는 기본으로 제공되는 기본 데이터 타입이 있다.

CHAR (N)  고정길이 문자 최대 2000byte 디폴트값은 1바이트
VARCHAR2 (N) 가변길이 문자 최대 4000바이트 디폴트값은 1바이트
NCHAR (N) 고정길이 유니코드 문자 가변길이 유니코드 문자 다국어 입력가능 최대 2000바이트 1바이트

VARCHAR2 10 으로 선언하면 10바이트를 입력할수 있지만 세글자만 입력했을때 길이는 3바이트
CHAR 10으로 선언하면 abc 세글자만 입력해도 10바이트
영어는 글자당 1바이트 한글은 2바이트

숫자 데이터 타입
NUMBER를 사용한다
NUMBER (P, S) P : 자리수 1~38 디폴트 S 소수점 자리수 -87 ~127 디폴트 0
FLOAT(P) 넘버의 하위타입 1~128 디폴트 128

NUMBER(5) : 12345
NUMBER(5,2): 123.45

날짜 데이터 타입
DATE BC 4712년 1월 1일부터 9999년 12 31일 연 월 일 시 분초 까지 입력가능
TIMESTAMP 연월일시분초밀리초 까지 입력가능

LOB 데이터 타입
- LOB Large Object 의 약자로 대용량 데이터를 저장할수 있는 데이터 타입
CLOB 문자형 대용량 객체, 고정길이와 가변길이 문자 집합 지원, 최대 4GB
NCLOB 유니코드를 포함한 문자형 대용량 객체 최대 4GB
BLOB 이진형 대용량객체 최대의 4GB
BFILE 대용량 이진 파일에 대한 로케이터를 저장 최대 4GB

제약조건
- 테이블에 문제는 생기는 결함이 있는 데이터가 입력되지 않도록 미리 지정해둔 조건
- 제약조건은 테이블 생성할때 함께 설정할 수 있고, 추후에 생성하거나 변경할수도 있다.

NOT NULL
컬럼명 자료형 NOT NULL;
- 컬럼을 정의할 때 NOT NULL 제약조건을 명시하면 해당 컬럼에는 반드시 데이터를 입력해야한다.
- 즉 반드시 들어있어야 하는 컬럼에는 NOT NULL 제약조건을 만들어 사용한다

UNIQUE
컬럼명 데이터 타입 UNIQUE;
또는
CONSTRAINTS 제약조건명 UNIQUE(컬럼명);

- 해당 컬럼의 들어가는 값이 유일해야 한다는 의미
- 즉 중복되는 값을 허용하지 않음
- NOT NULL을 같이 명시하면 해당 컬럼에 들어오는 값은 유일하고 반드시 입력해야 한다.

PRIMARY KEY 기본키
컬럼명 데이터 타입 PRIMARY KEY;
또는
CONSTRAINTS 제약조건명 PRIMARY KEY(컬럼명);

- UNIQUE와 NOT NULL 속성을 동시에 가진 제약조건
- 테이블당 1개의 기본키만 생성할수 있다.

FOREIGN KEY 외래키
CONSTRAINTS 외래키명 FOREIGN KEY(컬럼) REFERENCES 참조테이블(컬럼명);

- 두 테이블의 관계를 설정할때 사용하는 제약조건

- 부서의 정보는 부서테이블에 저장이 되어있다
- 사원테이블에는 신입사원이 입사했을때 잘못된 부서번호흘 입력하는 오류를 범할수도 있다
-  외래키를 설정해놓으면 부서정보에 없는 부서번호를 입력하려고 할때
오라클은 오류를 발생시켜 잘못된 데이터가 입력되는것을 방지
- 사원이 있는 부서가 있을때, 부서를 삭제하수 없다

외래키 제약사항
- 참조하려는 테이블이 먼저 생성되어야 하며, 참조키가 참조 테이블의 기본키로 만들어져 있어야 한다.
- 외래키에 사용할수 있는 컬럼 개수는 최대 32개이다
- 여러 컬럼을 외래키로 만드려면, 참조하는 컬럼과 외래키 컬럼의 순서와 개수가 같아야한다

CHECK
CONSTRAINTS 체크명 CHECK(체크조건);
- 컬럼에 입력되는 데이터를 체크해 특정 조건의 맞는 데이터만 입력받고 그렇지 않으면 오류를 낸다

DEFAULT
컬럼명 자료형 DEFAULT 값
- 아무것도 입력하지 않으면 설정한 기본값이 입력됨
- 값이 입력되면 기본값은 무시된다.

테이블 생성
CREATE TABLE 테이블명(
	컬럼명 타입(길이),
	컬럼명 타입(길이),
	컬럼명 타입(길이)
);

테이블 삭제
DROP TABLE 테이블명;

테이블 변경
- CREATE문으로 테이블을 생성한 후 불가피하게 수정해야 할 상황이 발생할 수 있다.
- 최초설계를 잘못한 원인도 있고, 요구사항이 변경될수도 있다.
- 여러 원인으로 기존에 생성했던 컬럼의 데이터타입을 수정하거나 삭제, 새로운 컬럼을 넣어야 하는 경우
발생하는데, 이때마다 테이블을 삭제하고 생성하는것은 여러 문제를 발생시킬수 있음
