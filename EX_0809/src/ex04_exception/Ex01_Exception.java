package ex04_exception;
/*
 * 예외처리
 * 에러와 예외
 * 프로그램을 실행하다보면 갑자기 프그램이 종료되거나, 어떤 원인에 의해 잘못 동작하여 오류 메시지가 나타나는 등 예기치 못한 오류가 발생한다
 * 전자는 우리가 해결할수 없는 시스템 에러가 발생해 프로그램이 종료된 경우이며, 후자는 프로그램 사용중 발생한 오류를 개발자가 처리해 메시지가 출력된 경우
 * 
 * 에러 - 시스템에 비정상적인 상황이 생겼을때 발생
 * 외부요인일수도 있고, 프로그램 구동중에 발생하는 치명적인 오류일수도 있다.
 * 이러한 에러들은 개발자가 예측하거나 처리할수 없는 영역이다.
 * 
 * OutOfMemoryError 프로그램 실행중 메모리 부족
 * IOError 입출력 에러
 * StackOverFlowError 가용 메모리 부족 현상, 재귀 호출 문제시 발생
 * 
 * 예외 exception 대체로 프로그램 구동중에 나타나는 오류들
 * 문법적으로는 문제가 없어 보이지만, 실제 운영중에 생기는 문제들
 * 체크예외와 비체크예외 두가지가 있음.
 * 
 * 체크예외 - 자바소스를 컴파일 하는 과정에서 검사함.
 * 보통 문법적으로 강제하여 예외처리를 해야하는 경우
 * 
 * 비체크예외 - 컴파일 과정에서 검사하지 않으므로 사용자의 경험이나 테스트로 찾아야하는 경우
 * 
 * 예외클래스 - 자바는 객체 지향언어이고, 따라서 프로그램에서 발생하는 예외들은 클래스 형태로 제공됨
 * 
 * NullPointerException - 객체가 제대로 생성되지 않은 상태에서 사용할 경우 발생.
 * 객체를 선언하면 주소를 갖게되고, 그것을 통해 객체에 접근해 값을 가져온다.
 * 객체 변수는 정의되었는데 메모리에 올리지 않은 경우 예외 발생
 */

public class Ex01_Exception {
	public static void main(String[] args) {
		//NullPointerException
		String[] strArray = null; //배열 변수만 만들고 생성하지 않음
		
		//생성하지 않은 배열을 호출하려고 하니 에러 발생
		System.out.println("strArray[0] = " + strArray[0]);
	}
}
