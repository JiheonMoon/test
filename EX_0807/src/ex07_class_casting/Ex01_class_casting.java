package ex07_class_casting;
/*
 * 클래스에서의 타입변환 - 타입을 다른 타입으로 변환하는것
 * 자바에는 두가지 타입변환이 있음
 * -자료형 변환 -클래스의 객체 타입 변환
 * 클래스의 타입변환도 마찬가지로 자동타입 변환과 강제 타입변환이 있음
 * 단, 자료형에 비해 타입변환이 가능한 범위가 상당히 좁음
 * 클래스의 타입 변환은, 서로 상속관계에 있는 클래스 사이에서만 변환할수 있음
 * 
 * 클래스의 자동타입변환
 * 자료형의 자동형변환과 마찬가지로 개발자가 직접 명시하지 않아도 자동으로 타입변환이 일어나는 것을 '클래스 자동 타입 변환'
 * 클래스 자동타입 변환은 상속관계에 있는 자식클래스의 객체를 부모타입으로 변환하는것을 말함
 * 
 * 부모타입 변수명 = new 자식클래스명();
 * 
 * 이미 만들어진 자식 객체를 부모타입으로 변환하려고 할때는 다음과 같이 쓴다.
 * 
 * 부모타입 변수명 = 자식객체변수명;
 */

class Parent{}

class Child extends Parent{}

public class Ex01_class_casting {
	public static void main(String[] args) {
		Parent p1 = new Parent(); //Parent 타입의 객체
		Child c1 = new Child(); //Child 타입의 객체
		
		Parent p2 = new Child(); //자동 타입 변환
		Parent p3 = c1; //자동 타입 변환
		
//		int myAge = 20;
//		int yourAge = myAge;
//		myAge = 21;
//		System.out.println(yourAge);
		
		//기본 자료형 끼리 ==는 값이 같은지 비교
		//객체끼리 비교를 할때 ==연산자는 주소값을 비교
		if(p3 == c1) {
			System.out.println("p3와 c1은 같은 객체를 참조하고 있습니다.");
		}
		//타입을 변환한다고 객체가 바뀌는 것이 아니라, 객체를 보존되고 사용만 부모 객체처럼 한다
		//자동타입변환은 반드시 자식 클래스의 객체를 부모타입으로 변환할대만 적용할 수 있다.
		//1차 상속관계가 아니더라도 상위계층의 타입으로 변환할수 있다.
		//하지만 같은 상위계층을 갖고 있더라도, 타입 변환을 시도하려는 두 클래스간의 상속관계가 없다면 타입변환은 불가능함
		
	}
}
