package ex02_constructor;

public class Snack {
	/* 생성자 constructor
	 * 객체를 생성할때 호출되어 객체의 초기화를 담당하는 특별한 메서드
	 * 객체를 생성하고 초기화 하기 위해서는 반드시 생성자를 호출해야한다
	 * 따라서 객체를 생성해야 하는 참조용 클래스는 모두 생성자를 갖고있음
	 * 
	 * 생정자의 정의 - 반환값이 없지만, 반환타입을 아예 작성하지 않음
	 * 객체의 필드를 초기화 하기위한 데이터를 매개변수를 통해 전달할수 있다.
	 * 
	 * 접근 제한자 클래스명(매개변수1,2){
	 *  '생성자명은 무조건 클래스명'
	 * }
	 * 
	 * 생성자의 호출 위치
	 * 일반 메서드들과 다르게, 생성자를 호출하는 곳이 정해져있음
	 * 생성자는 클래스를 기반으로 객체를 생성할때, 객체의 초기화를 담당하는 역할을 하므로
	 * 객체를 생성할때만 호출할수 있음
	 * 
	 * 생성자 호출방법
	 * 생성자를 호출할때는 new 키워드를 함께 사용
	 * 클래스명 변수명 = new 클래스명();
	 * 
	 */
	
	int price;
	
	//생성자를 정의하지 않아도 사용 가능한 이유
	//자바의 모든 클래스에는 하나 이상의 생성자가 정의 되어 있어야 한다
	//클래스를 생성하면서 개발자가 직접 생성자를 성언하지 않았지만, 자바 컴파일러가 자동으로 제공해주고 있다. 다만 생략되어 있다.
	
	
	//기본생성자
	//매개변수가 별도로 없으며, 중괄호 블록 안에 코드가 없는 비어있는 생성자를 말한다
	//기본생성자는 개발자가 직접 선언하지 않았을때만 컴파일러가 자동으로 추가한다, 직접 생성자를 선언한다면 선언된 생성자를 사용함
//	public Snack() { //기본생성자
//		
//	}
	
	public Snack(int p) {
		price = p;
	}
	
	//생성자 선언의 이유
	//생성자는 객체를 생성함과 동시에 객체를 초기화 할 수 있다.
	//생성자를 통해 객체를 초기화 한다는 것은 필드와 메서드를 호출하는 등 사용하기 위해 메모리를 올린다는 의미
	//생성자를 통해 객체를 메모리에 올림과 동시에, 더 나아가 객체 멤버에 접근 가능하므로 일반벅인 메서드처럼 객체멤버의 데이터를 초기화할 수 있다.
	//메서드를 ㄹ통해 매개변수에 값을 전달할 수 있었던것 처럼 생성자 역시 매개변수를 통해 필드에 값을 전달할 수 있다.
	
	
	
	void info() {
		System.out.println("과자의 가격은 " + price + "원입니다.");
	}
}
